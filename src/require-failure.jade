extends inclusion/base
block content
    :markdown
        # Require failure of an other recognizer
 
        With the method `requireFailure()` you can let a recognizer require the failure of an other recognizer before recognizing.
        This could become useful when you want to nest two gestures, like pan-horizontal and pan-vertical.
 
        ````js
        var horizontal = new Hammer.Pan({
            event: 'panh',
            direction: Hammer.DIRECTION_HORIZONTAL
        });
        var vertical = new Hammer.Pan({
            event: 'panv',
            direction: Hammer.DIRECTION_VERTICAL
        });
        vertical.requireFailure(horizontal);
 
        // An example can be found at the file `/tests/manual/nested.html`.
 
        ````
 
        Removing the dependency could be done with the `dropRequireFailure()` method.
 
        ## Using requireFailure to recognize multiple taps
 
        Because multiple gestures can be recognized simultaneously and a
        gesture can be recognized based on the failure of other gestures.
        Multiple taps on the same element can be easily recognized on this way:
 
        ````js
        var hammer = new Hammer(el, {});
 
        var tap = new Hammer.Tap();
        var doubleTap = new Hammer.Tap({event: 'doubleTap', taps: 2 });
        var tripleTap = new Hammer.Tap({event: 'tripleTap', taps: 3 });
 
        hammer.add(tripleTap);
        hammer.add(doubleTap);
        hammer.add(tap);
 
        tripleTap.recognizeWith(doubleTap)
                 .recognizeWith(tap);
        doubleTap.recognizeWith(tap);
 
        doubleTap.requireFailure(tripleTap);
        tap.requireFailure(tripleTap)
           .requireFailure(doubleTap
        ````
 
        When a tap gesture requires a failure to be recognized, its
        recognizer will wait a short period to check that the other gesture has
        been failed. In this case, you should not assume that its tap gesture event
        will be fired immediately.
